{"ast":null,"code":"var _jsxFileName = \"/Users/cyriljaison/Desktop/test/task-list-react-typescript/src/components/CreateNewList.tsx\";\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addList, setNotification } from '../store/actions';\n\nconst CreateNewList = () => {\n  const dispatch = useDispatch();\n  const [listName, setListName] = useState('');\n\n  const inputChangeHandler = e => {\n    setListName(e.currentTarget.value);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (listName.trim() === '') {\n      return alert('List name is required!');\n    }\n\n    const newList = {\n      id: `list-${new Date().getTime()}`,\n      name: listName,\n      tasks: []\n    };\n    dispatch(addList(newList));\n    dispatch(setNotification(`New list(\"${newList.name}\") created!`));\n    setListName('');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-header-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"Create New List\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"List Name\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"input\",\n    placeholder: \"List Name\",\n    name: \"listName\",\n    value: listName,\n    onChange: inputChangeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"button is-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"Create\")))));\n};\n\nexport default CreateNewList;","map":{"version":3,"sources":["/Users/cyriljaison/Desktop/test/task-list-react-typescript/src/components/CreateNewList.tsx"],"names":["React","useState","useDispatch","addList","setNotification","CreateNewList","dispatch","listName","setListName","inputChangeHandler","e","currentTarget","value","submitHandler","preventDefault","trim","alert","newList","id","Date","getTime","name","tasks"],"mappings":";AAAA,OAAOA,KAAP,IAAoBC,QAApB,QAA+C,OAA/C;AACA,SAASC,WAAT,QAA4B,aAA5B;AAGA,SAASC,OAAT,EAAkBC,eAAlB,QAAyC,kBAAzC;;AAEA,MAAMC,aAAiB,GAAG,MAAM;AAC9B,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMQ,kBAAkB,GAAIC,CAAD,IAAoC;AAC7DF,IAAAA,WAAW,CAACE,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAX;AACD,GAFD;;AAIA,QAAMC,aAAa,GAAIH,CAAD,IAAmC;AACvDA,IAAAA,CAAC,CAACI,cAAF;;AAEA,QAAGP,QAAQ,CAACQ,IAAT,OAAoB,EAAvB,EAA2B;AACzB,aAAOC,KAAK,CAAC,wBAAD,CAAZ;AACD;;AAED,UAAMC,OAAa,GAAG;AACpBC,MAAAA,EAAE,EAAG,QAAO,IAAIC,IAAJ,GAAWC,OAAX,EAAqB,EADb;AAEpBC,MAAAA,IAAI,EAAEd,QAFc;AAGpBe,MAAAA,KAAK,EAAE;AAHa,KAAtB;AAMAhB,IAAAA,QAAQ,CAACH,OAAO,CAACc,OAAD,CAAR,CAAR;AACAX,IAAAA,QAAQ,CAACF,eAAe,CAAE,aAAYa,OAAO,CAACI,IAAK,aAA3B,CAAhB,CAAR;AACAb,IAAAA,WAAW,CAAC,EAAD,CAAX;AACD,GAhBD;;AAkBA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CADF,eAIE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,QAAQ,EAAEK,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAC,OAFZ;AAGE,IAAA,WAAW,EAAC,WAHd;AAIE,IAAA,IAAI,EAAC,UAJP;AAKE,IAAA,KAAK,EAAEN,QALT;AAME,IAAA,QAAQ,EAAEE,kBANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF,eAcE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAdF,CADF,CAJF,CADF;AA2BD,CArDD;;AAuDA,eAAeJ,aAAf","sourcesContent":["import React, { FC, useState, FormEvent } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { List } from '../store/types';\nimport { addList, setNotification } from '../store/actions';\n\nconst CreateNewList: FC = () => {\n  const dispatch = useDispatch();\n  const [listName, setListName] = useState('');\n\n  const inputChangeHandler = (e: FormEvent<HTMLInputElement>) => {\n    setListName(e.currentTarget.value);\n  }\n\n  const submitHandler = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if(listName.trim() === '') {\n      return alert('List name is required!');\n    }\n\n    const newList: List = {\n      id: `list-${new Date().getTime()}`,\n      name: listName,\n      tasks: []\n    }\n\n    dispatch(addList(newList));\n    dispatch(setNotification(`New list(\"${newList.name}\") created!`));\n    setListName('');\n  }\n\n  return(\n    <div className=\"card mb-5\">\n      <div className=\"card-header\">\n        <p className=\"card-header-title\">Create New List</p>\n      </div>\n      <div className=\"card-content\">\n        <form onSubmit={submitHandler}>\n          <div className=\"field\">\n            <label className=\"label\">List Name</label>\n            <div className=\"control\">\n              <input \n                type=\"text\" \n                className=\"input\"\n                placeholder=\"List Name\"\n                name=\"listName\"\n                value={listName}\n                onChange={inputChangeHandler}\n              />\n            </div>\n          </div>\n          <div className=\"control\">\n            <button type=\"submit\" className=\"button is-primary\">Create</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default CreateNewList;"]},"metadata":{},"sourceType":"module"}